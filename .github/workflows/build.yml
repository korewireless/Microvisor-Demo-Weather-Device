on:
  push:
  pull_request:
  workflow_dispatch:
jobs:
  build_linux_native:
    name: Build on Linux with native tools
    runs-on: ubuntu-latest
    steps:
    - name: Get application code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Get Pre-reqs
      run: DEBIAN_FRONTEND=noninteractive && sudo apt-get update -qq && sudo apt-get install -yqq gcc-arm-none-eabi binutils-arm-none-eabi build-essential libsecret-1-dev cmake curl git
    - name: Build application code
      run: cmake -S . -B build && cmake --build build
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mv-weather-device-demo-linux-native
        path: ${{ github.workspace }}/build/App/mv-weather-device-demo.*
  build_linux_docker:
    name: Build on Linux with Docker
    runs-on: ubuntu-latest
    steps:
    - name: Get application code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Build Docker image
      run: docker build --build-arg UID=$(id -u) --build-arg GID=$(id -g) -t mv-weather-image-lin-dock .
    - name: Build application code
      run: docker run --rm -v $(pwd)/:/home/mvisor/project/ --env BUILD_ONLY=true --name mv-weather-lin-dock mv-weather-image-lin-dock
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mv-weather-device-demo-linux-docker
        path: ${{ github.workspace }}/build/App/mv-weather-device-demo.*
  build_win_wsl:
    name: Build on Windows with WSL
    runs-on: windows-latest
    defaults:
      run:
        shell: wsl-bash {0}
    steps:
    - name: Get WSL
      uses: Vampire/setup-wsl@v3
      with:
        distribution: Ubuntu-20.04
    - name: Get application code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Get Pre-reqs
      run: DEBIAN_FRONTEND=noninteractive && sudo apt-get update -qq && apt-get install -yqq gcc-arm-none-eabi binutils-arm-none-eabi build-essential libsecret-1-dev cmake curl git
    - name: Build code
      run: cmake -S . -B build && cmake --build build
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mv-weather-device-demo-win-wsl
        path: ${{ github.workspace }}/build/App/mv-weather-device-demo.*
  build_mac_docker:
    name: Build on macOS with Docker
    runs-on: macos-13
    steps:
    - name: Get application code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Get Docker
      run: brew install docker colima
    - name: Run Docker
      run: colima start -f
    - name: Build docker image
      run: docker build --build-arg UID=$(id -u) --build-arg GID=$(id -g) -t mv-weather-image-mac-dock .
    - name: Build code
      run: docker run --rm -v $(pwd)/:/home/mvisor/project/ --env BUILD_ONLY=true --name mv-weather-mac-dock mv-weather-image-mac-dock
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mv-weather-device-demo-mac-docker
        path: ${{ github.workspace }}/build/App/mv-weather-device-demo.*
  build_mac_native:
    name: Build on macOS with native tooling
    runs-on: macos-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Get Pre-reqs
      run: brew install --cask gcc-arm-embedded
    - name: Build code
      run: cmake -S . -B build && cmake --build build
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mv-weather-device-demo-mac-native
        path: ${{ github.workspace }}/build/App/mv-weather-device-demo.*
